/*
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PrivilegesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PrivilegeApi
 */
@Disabled
public class PrivilegeApiTest {

    private static PrivilegeApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PrivilegeApi(apiClient);
    }

    /**
     * Returns the earnable privileges on a site.   Privileges define abilities a user can earn (via reputation) on any Stack Exchange site.   While fairly stable, over time they do change. New ones are introduced with new features, and the reputation requirements change as a site matures.   This method returns a list of privileges. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEarnableListTest() throws ApiException {
        String site = null;
        Integer pagesize = null;
        Integer page = null;
        String filter = null;
        String paramCallback = null;
        List<PrivilegesInner> response = api.getEarnableList(site)
                .pagesize(pagesize)
                .page(page)
                .filter(filter)
                .paramCallback(paramCallback)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns the privileges the user identified by access_token has.   This method returns a list of privileges. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserPrivilegesTest() throws ApiException {
        String site = null;
        Integer pagesize = null;
        Integer page = null;
        String filter = null;
        String paramCallback = null;
        List<PrivilegesInner> response = api.getUserPrivileges(site)
                .pagesize(pagesize)
                .page(page)
                .filter(filter)
                .paramCallback(paramCallback)
                .execute();
        // TODO: test validations
    }

}
