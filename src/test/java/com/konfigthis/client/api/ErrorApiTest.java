/*
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Error;
import com.konfigthis.client.model.ErrorsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ErrorApi
 */
@Disabled
public class ErrorApiTest {

    private static ErrorApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ErrorApi(apiClient);
    }

    /**
     * This method allows you to generate an error.   This method is only intended for use when testing an application or library. Unlike other methods in the API, its contract is not frozen, and new error codes may be added at any time.   This method results in an error, which will be expressed with a 400 HTTP status code and setting the error* properties on the wrapper object. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateErrorTest() throws ApiException {
        Integer id = null;
        Error response = api.generateError(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns the various error codes that can be produced by the API.   This method is provided for discovery, documentation, and testing purposes, it is not expected many applications will consume it during normal operation.   For testing purposes, look into the /errors/{id} method which simulates errors given a code.   This method returns a list of errors. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listErrorsTest() throws ApiException {
        Integer pagesize = null;
        Integer page = null;
        String filter = null;
        String paramCallback = null;
        List<ErrorsInner> response = api.listErrors()
                .pagesize(pagesize)
                .page(page)
                .filter(filter)
                .paramCallback(paramCallback)
                .execute();
        // TODO: test validations
    }

}
