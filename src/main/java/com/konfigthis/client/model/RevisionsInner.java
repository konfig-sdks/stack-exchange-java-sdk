/*
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AnswersInnerLastEditor;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * RevisionsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class RevisionsInner {
  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Object> tags = null;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private Integer creationDate;

  public static final String SERIALIZED_NAME_IS_ROLLBACK = "is_rollback";
  @SerializedName(SERIALIZED_NAME_IS_ROLLBACK)
  private Boolean isRollback;

  public static final String SERIALIZED_NAME_LAST_BODY = "last_body";
  @SerializedName(SERIALIZED_NAME_LAST_BODY)
  private String lastBody;

  public static final String SERIALIZED_NAME_LAST_TAGS = "last_tags";
  @SerializedName(SERIALIZED_NAME_LAST_TAGS)
  private List<Object> lastTags = null;

  public static final String SERIALIZED_NAME_LAST_TITLE = "last_title";
  @SerializedName(SERIALIZED_NAME_LAST_TITLE)
  private String lastTitle;

  public static final String SERIALIZED_NAME_POST_ID = "post_id";
  @SerializedName(SERIALIZED_NAME_POST_ID)
  private Integer postId;

  public static final String SERIALIZED_NAME_POST_TYPE = "post_type";
  @SerializedName(SERIALIZED_NAME_POST_TYPE)
  private String postType;

  public static final String SERIALIZED_NAME_REVISION_GUID = "revision_guid";
  @SerializedName(SERIALIZED_NAME_REVISION_GUID)
  private String revisionGuid;

  public static final String SERIALIZED_NAME_REVISION_NUMBER = "revision_number";
  @SerializedName(SERIALIZED_NAME_REVISION_NUMBER)
  private Integer revisionNumber;

  public static final String SERIALIZED_NAME_REVISION_TYPE = "revision_type";
  @SerializedName(SERIALIZED_NAME_REVISION_TYPE)
  private String revisionType;

  public static final String SERIALIZED_NAME_SET_COMMUNITY_WIKI = "set_community_wiki";
  @SerializedName(SERIALIZED_NAME_SET_COMMUNITY_WIKI)
  private Boolean setCommunityWiki;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private AnswersInnerLastEditor user;

  public RevisionsInner() {
  }

  public RevisionsInner tags(List<Object> tags) {
    
    
    
    
    this.tags = tags;
    return this;
  }

  public RevisionsInner addTagsItem(Object tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getTags() {
    return tags;
  }


  public void setTags(List<Object> tags) {
    
    
    
    this.tags = tags;
  }


  public RevisionsInner title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public RevisionsInner body(String body) {
    
    
    
    
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    
    
    
    this.body = body;
  }


  public RevisionsInner comment(String comment) {
    
    
    
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    
    
    
    this.comment = comment;
  }


  public RevisionsInner creationDate(Integer creationDate) {
    
    
    
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(Integer creationDate) {
    
    
    
    this.creationDate = creationDate;
  }


  public RevisionsInner isRollback(Boolean isRollback) {
    
    
    
    
    this.isRollback = isRollback;
    return this;
  }

   /**
   * Get isRollback
   * @return isRollback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsRollback() {
    return isRollback;
  }


  public void setIsRollback(Boolean isRollback) {
    
    
    
    this.isRollback = isRollback;
  }


  public RevisionsInner lastBody(String lastBody) {
    
    
    
    
    this.lastBody = lastBody;
    return this;
  }

   /**
   * Get lastBody
   * @return lastBody
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastBody() {
    return lastBody;
  }


  public void setLastBody(String lastBody) {
    
    
    
    this.lastBody = lastBody;
  }


  public RevisionsInner lastTags(List<Object> lastTags) {
    
    
    
    
    this.lastTags = lastTags;
    return this;
  }

  public RevisionsInner addLastTagsItem(Object lastTagsItem) {
    if (this.lastTags == null) {
      this.lastTags = new ArrayList<>();
    }
    this.lastTags.add(lastTagsItem);
    return this;
  }

   /**
   * Get lastTags
   * @return lastTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getLastTags() {
    return lastTags;
  }


  public void setLastTags(List<Object> lastTags) {
    
    
    
    this.lastTags = lastTags;
  }


  public RevisionsInner lastTitle(String lastTitle) {
    
    
    
    
    this.lastTitle = lastTitle;
    return this;
  }

   /**
   * Get lastTitle
   * @return lastTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastTitle() {
    return lastTitle;
  }


  public void setLastTitle(String lastTitle) {
    
    
    
    this.lastTitle = lastTitle;
  }


  public RevisionsInner postId(Integer postId) {
    
    
    
    
    this.postId = postId;
    return this;
  }

   /**
   * Get postId
   * @return postId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPostId() {
    return postId;
  }


  public void setPostId(Integer postId) {
    
    
    
    this.postId = postId;
  }


  public RevisionsInner postType(String postType) {
    
    
    
    
    this.postType = postType;
    return this;
  }

   /**
   * Get postType
   * @return postType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostType() {
    return postType;
  }


  public void setPostType(String postType) {
    
    
    
    this.postType = postType;
  }


  public RevisionsInner revisionGuid(String revisionGuid) {
    
    
    
    
    this.revisionGuid = revisionGuid;
    return this;
  }

   /**
   * Get revisionGuid
   * @return revisionGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRevisionGuid() {
    return revisionGuid;
  }


  public void setRevisionGuid(String revisionGuid) {
    
    
    
    this.revisionGuid = revisionGuid;
  }


  public RevisionsInner revisionNumber(Integer revisionNumber) {
    
    
    
    
    this.revisionNumber = revisionNumber;
    return this;
  }

   /**
   * Get revisionNumber
   * @return revisionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRevisionNumber() {
    return revisionNumber;
  }


  public void setRevisionNumber(Integer revisionNumber) {
    
    
    
    this.revisionNumber = revisionNumber;
  }


  public RevisionsInner revisionType(String revisionType) {
    
    
    
    
    this.revisionType = revisionType;
    return this;
  }

   /**
   * Get revisionType
   * @return revisionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRevisionType() {
    return revisionType;
  }


  public void setRevisionType(String revisionType) {
    
    
    
    this.revisionType = revisionType;
  }


  public RevisionsInner setCommunityWiki(Boolean setCommunityWiki) {
    
    
    
    
    this.setCommunityWiki = setCommunityWiki;
    return this;
  }

   /**
   * Get setCommunityWiki
   * @return setCommunityWiki
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSetCommunityWiki() {
    return setCommunityWiki;
  }


  public void setSetCommunityWiki(Boolean setCommunityWiki) {
    
    
    
    this.setCommunityWiki = setCommunityWiki;
  }


  public RevisionsInner user(AnswersInnerLastEditor user) {
    
    
    
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AnswersInnerLastEditor getUser() {
    return user;
  }


  public void setUser(AnswersInnerLastEditor user) {
    
    
    
    this.user = user;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the RevisionsInner instance itself
   */
  public RevisionsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RevisionsInner revisionsInner = (RevisionsInner) o;
    return Objects.equals(this.tags, revisionsInner.tags) &&
        Objects.equals(this.title, revisionsInner.title) &&
        Objects.equals(this.body, revisionsInner.body) &&
        Objects.equals(this.comment, revisionsInner.comment) &&
        Objects.equals(this.creationDate, revisionsInner.creationDate) &&
        Objects.equals(this.isRollback, revisionsInner.isRollback) &&
        Objects.equals(this.lastBody, revisionsInner.lastBody) &&
        Objects.equals(this.lastTags, revisionsInner.lastTags) &&
        Objects.equals(this.lastTitle, revisionsInner.lastTitle) &&
        Objects.equals(this.postId, revisionsInner.postId) &&
        Objects.equals(this.postType, revisionsInner.postType) &&
        Objects.equals(this.revisionGuid, revisionsInner.revisionGuid) &&
        Objects.equals(this.revisionNumber, revisionsInner.revisionNumber) &&
        Objects.equals(this.revisionType, revisionsInner.revisionType) &&
        Objects.equals(this.setCommunityWiki, revisionsInner.setCommunityWiki) &&
        Objects.equals(this.user, revisionsInner.user)&&
        Objects.equals(this.additionalProperties, revisionsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, title, body, comment, creationDate, isRollback, lastBody, lastTags, lastTitle, postId, postType, revisionGuid, revisionNumber, revisionType, setCommunityWiki, user, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RevisionsInner {\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    isRollback: ").append(toIndentedString(isRollback)).append("\n");
    sb.append("    lastBody: ").append(toIndentedString(lastBody)).append("\n");
    sb.append("    lastTags: ").append(toIndentedString(lastTags)).append("\n");
    sb.append("    lastTitle: ").append(toIndentedString(lastTitle)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    postType: ").append(toIndentedString(postType)).append("\n");
    sb.append("    revisionGuid: ").append(toIndentedString(revisionGuid)).append("\n");
    sb.append("    revisionNumber: ").append(toIndentedString(revisionNumber)).append("\n");
    sb.append("    revisionType: ").append(toIndentedString(revisionType)).append("\n");
    sb.append("    setCommunityWiki: ").append(toIndentedString(setCommunityWiki)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tags");
    openapiFields.add("title");
    openapiFields.add("body");
    openapiFields.add("comment");
    openapiFields.add("creation_date");
    openapiFields.add("is_rollback");
    openapiFields.add("last_body");
    openapiFields.add("last_tags");
    openapiFields.add("last_title");
    openapiFields.add("post_id");
    openapiFields.add("post_type");
    openapiFields.add("revision_guid");
    openapiFields.add("revision_number");
    openapiFields.add("revision_type");
    openapiFields.add("set_community_wiki");
    openapiFields.add("user");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RevisionsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RevisionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RevisionsInner is not found in the empty JSON string", RevisionsInner.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("last_body") != null && !jsonObj.get("last_body").isJsonNull()) && !jsonObj.get("last_body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_body").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("last_tags") != null && !jsonObj.get("last_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_tags` to be an array in the JSON string but got `%s`", jsonObj.get("last_tags").toString()));
      }
      if ((jsonObj.get("last_title") != null && !jsonObj.get("last_title").isJsonNull()) && !jsonObj.get("last_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_title").toString()));
      }
      if ((jsonObj.get("post_type") != null && !jsonObj.get("post_type").isJsonNull()) && !jsonObj.get("post_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `post_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("post_type").toString()));
      }
      if ((jsonObj.get("revision_guid") != null && !jsonObj.get("revision_guid").isJsonNull()) && !jsonObj.get("revision_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revision_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revision_guid").toString()));
      }
      if ((jsonObj.get("revision_type") != null && !jsonObj.get("revision_type").isJsonNull()) && !jsonObj.get("revision_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revision_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revision_type").toString()));
      }
      // validate the optional field `user`
      if (jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) {
        AnswersInnerLastEditor.validateJsonObject(jsonObj.getAsJsonObject("user"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RevisionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RevisionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RevisionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RevisionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<RevisionsInner>() {
           @Override
           public void write(JsonWriter out, RevisionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public RevisionsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             RevisionsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RevisionsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RevisionsInner
  * @throws IOException if the JSON string is invalid with respect to RevisionsInner
  */
  public static RevisionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RevisionsInner.class);
  }

 /**
  * Convert an instance of RevisionsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

