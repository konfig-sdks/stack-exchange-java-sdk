/*
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AnswersInnerLastEditorBadgeCounts;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * NetworkUsersInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class NetworkUsersInner {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private Integer accountId;

  public static final String SERIALIZED_NAME_ANSWER_COUNT = "answer_count";
  @SerializedName(SERIALIZED_NAME_ANSWER_COUNT)
  private Integer answerCount;

  public static final String SERIALIZED_NAME_BADGE_COUNTS = "badge_counts";
  @SerializedName(SERIALIZED_NAME_BADGE_COUNTS)
  private AnswersInnerLastEditorBadgeCounts badgeCounts;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private Integer creationDate;

  public static final String SERIALIZED_NAME_LAST_ACCESS_DATE = "last_access_date";
  @SerializedName(SERIALIZED_NAME_LAST_ACCESS_DATE)
  private Integer lastAccessDate;

  public static final String SERIALIZED_NAME_QUESTION_COUNT = "question_count";
  @SerializedName(SERIALIZED_NAME_QUESTION_COUNT)
  private Integer questionCount;

  public static final String SERIALIZED_NAME_REPUTATION = "reputation";
  @SerializedName(SERIALIZED_NAME_REPUTATION)
  private Integer reputation;

  public static final String SERIALIZED_NAME_SITE_NAME = "site_name";
  @SerializedName(SERIALIZED_NAME_SITE_NAME)
  private String siteName;

  public static final String SERIALIZED_NAME_SITE_URL = "site_url";
  @SerializedName(SERIALIZED_NAME_SITE_URL)
  private String siteUrl;

  public static final String SERIALIZED_NAME_TOP_ANSWERS = "top_answers";
  @SerializedName(SERIALIZED_NAME_TOP_ANSWERS)
  private List<Object> topAnswers = null;

  public static final String SERIALIZED_NAME_TOP_QUESTIONS = "top_questions";
  @SerializedName(SERIALIZED_NAME_TOP_QUESTIONS)
  private List<Object> topQuestions = null;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_TYPE = "user_type";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public NetworkUsersInner() {
  }

  public NetworkUsersInner accountId(Integer accountId) {
    
    
    
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAccountId() {
    return accountId;
  }


  public void setAccountId(Integer accountId) {
    
    
    
    this.accountId = accountId;
  }


  public NetworkUsersInner answerCount(Integer answerCount) {
    
    
    
    
    this.answerCount = answerCount;
    return this;
  }

   /**
   * Get answerCount
   * @return answerCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAnswerCount() {
    return answerCount;
  }


  public void setAnswerCount(Integer answerCount) {
    
    
    
    this.answerCount = answerCount;
  }


  public NetworkUsersInner badgeCounts(AnswersInnerLastEditorBadgeCounts badgeCounts) {
    
    
    
    
    this.badgeCounts = badgeCounts;
    return this;
  }

   /**
   * Get badgeCounts
   * @return badgeCounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AnswersInnerLastEditorBadgeCounts getBadgeCounts() {
    return badgeCounts;
  }


  public void setBadgeCounts(AnswersInnerLastEditorBadgeCounts badgeCounts) {
    
    
    
    this.badgeCounts = badgeCounts;
  }


  public NetworkUsersInner creationDate(Integer creationDate) {
    
    
    
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(Integer creationDate) {
    
    
    
    this.creationDate = creationDate;
  }


  public NetworkUsersInner lastAccessDate(Integer lastAccessDate) {
    
    
    
    
    this.lastAccessDate = lastAccessDate;
    return this;
  }

   /**
   * Get lastAccessDate
   * @return lastAccessDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastAccessDate() {
    return lastAccessDate;
  }


  public void setLastAccessDate(Integer lastAccessDate) {
    
    
    
    this.lastAccessDate = lastAccessDate;
  }


  public NetworkUsersInner questionCount(Integer questionCount) {
    
    
    
    
    this.questionCount = questionCount;
    return this;
  }

   /**
   * Get questionCount
   * @return questionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuestionCount() {
    return questionCount;
  }


  public void setQuestionCount(Integer questionCount) {
    
    
    
    this.questionCount = questionCount;
  }


  public NetworkUsersInner reputation(Integer reputation) {
    
    
    
    
    this.reputation = reputation;
    return this;
  }

   /**
   * Get reputation
   * @return reputation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReputation() {
    return reputation;
  }


  public void setReputation(Integer reputation) {
    
    
    
    this.reputation = reputation;
  }


  public NetworkUsersInner siteName(String siteName) {
    
    
    
    
    this.siteName = siteName;
    return this;
  }

   /**
   * Get siteName
   * @return siteName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSiteName() {
    return siteName;
  }


  public void setSiteName(String siteName) {
    
    
    
    this.siteName = siteName;
  }


  public NetworkUsersInner siteUrl(String siteUrl) {
    
    
    
    
    this.siteUrl = siteUrl;
    return this;
  }

   /**
   * Get siteUrl
   * @return siteUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSiteUrl() {
    return siteUrl;
  }


  public void setSiteUrl(String siteUrl) {
    
    
    
    this.siteUrl = siteUrl;
  }


  public NetworkUsersInner topAnswers(List<Object> topAnswers) {
    
    
    
    
    this.topAnswers = topAnswers;
    return this;
  }

  public NetworkUsersInner addTopAnswersItem(Object topAnswersItem) {
    if (this.topAnswers == null) {
      this.topAnswers = new ArrayList<>();
    }
    this.topAnswers.add(topAnswersItem);
    return this;
  }

   /**
   * Get topAnswers
   * @return topAnswers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getTopAnswers() {
    return topAnswers;
  }


  public void setTopAnswers(List<Object> topAnswers) {
    
    
    
    this.topAnswers = topAnswers;
  }


  public NetworkUsersInner topQuestions(List<Object> topQuestions) {
    
    
    
    
    this.topQuestions = topQuestions;
    return this;
  }

  public NetworkUsersInner addTopQuestionsItem(Object topQuestionsItem) {
    if (this.topQuestions == null) {
      this.topQuestions = new ArrayList<>();
    }
    this.topQuestions.add(topQuestionsItem);
    return this;
  }

   /**
   * Get topQuestions
   * @return topQuestions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getTopQuestions() {
    return topQuestions;
  }


  public void setTopQuestions(List<Object> topQuestions) {
    
    
    
    this.topQuestions = topQuestions;
  }


  public NetworkUsersInner userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public NetworkUsersInner userType(String userType) {
    
    
    
    
    this.userType = userType;
    return this;
  }

   /**
   * Get userType
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserType() {
    return userType;
  }


  public void setUserType(String userType) {
    
    
    
    this.userType = userType;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the NetworkUsersInner instance itself
   */
  public NetworkUsersInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkUsersInner networkUsersInner = (NetworkUsersInner) o;
    return Objects.equals(this.accountId, networkUsersInner.accountId) &&
        Objects.equals(this.answerCount, networkUsersInner.answerCount) &&
        Objects.equals(this.badgeCounts, networkUsersInner.badgeCounts) &&
        Objects.equals(this.creationDate, networkUsersInner.creationDate) &&
        Objects.equals(this.lastAccessDate, networkUsersInner.lastAccessDate) &&
        Objects.equals(this.questionCount, networkUsersInner.questionCount) &&
        Objects.equals(this.reputation, networkUsersInner.reputation) &&
        Objects.equals(this.siteName, networkUsersInner.siteName) &&
        Objects.equals(this.siteUrl, networkUsersInner.siteUrl) &&
        Objects.equals(this.topAnswers, networkUsersInner.topAnswers) &&
        Objects.equals(this.topQuestions, networkUsersInner.topQuestions) &&
        Objects.equals(this.userId, networkUsersInner.userId) &&
        Objects.equals(this.userType, networkUsersInner.userType)&&
        Objects.equals(this.additionalProperties, networkUsersInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, answerCount, badgeCounts, creationDate, lastAccessDate, questionCount, reputation, siteName, siteUrl, topAnswers, topQuestions, userId, userType, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkUsersInner {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    answerCount: ").append(toIndentedString(answerCount)).append("\n");
    sb.append("    badgeCounts: ").append(toIndentedString(badgeCounts)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastAccessDate: ").append(toIndentedString(lastAccessDate)).append("\n");
    sb.append("    questionCount: ").append(toIndentedString(questionCount)).append("\n");
    sb.append("    reputation: ").append(toIndentedString(reputation)).append("\n");
    sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
    sb.append("    siteUrl: ").append(toIndentedString(siteUrl)).append("\n");
    sb.append("    topAnswers: ").append(toIndentedString(topAnswers)).append("\n");
    sb.append("    topQuestions: ").append(toIndentedString(topQuestions)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_id");
    openapiFields.add("answer_count");
    openapiFields.add("badge_counts");
    openapiFields.add("creation_date");
    openapiFields.add("last_access_date");
    openapiFields.add("question_count");
    openapiFields.add("reputation");
    openapiFields.add("site_name");
    openapiFields.add("site_url");
    openapiFields.add("top_answers");
    openapiFields.add("top_questions");
    openapiFields.add("user_id");
    openapiFields.add("user_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to NetworkUsersInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!NetworkUsersInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NetworkUsersInner is not found in the empty JSON string", NetworkUsersInner.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `badge_counts`
      if (jsonObj.get("badge_counts") != null && !jsonObj.get("badge_counts").isJsonNull()) {
        AnswersInnerLastEditorBadgeCounts.validateJsonObject(jsonObj.getAsJsonObject("badge_counts"));
      }
      if ((jsonObj.get("site_name") != null && !jsonObj.get("site_name").isJsonNull()) && !jsonObj.get("site_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `site_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("site_name").toString()));
      }
      if ((jsonObj.get("site_url") != null && !jsonObj.get("site_url").isJsonNull()) && !jsonObj.get("site_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `site_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("site_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("top_answers") != null && !jsonObj.get("top_answers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `top_answers` to be an array in the JSON string but got `%s`", jsonObj.get("top_answers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("top_questions") != null && !jsonObj.get("top_questions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `top_questions` to be an array in the JSON string but got `%s`", jsonObj.get("top_questions").toString()));
      }
      if ((jsonObj.get("user_type") != null && !jsonObj.get("user_type").isJsonNull()) && !jsonObj.get("user_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NetworkUsersInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NetworkUsersInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NetworkUsersInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NetworkUsersInner.class));

       return (TypeAdapter<T>) new TypeAdapter<NetworkUsersInner>() {
           @Override
           public void write(JsonWriter out, NetworkUsersInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public NetworkUsersInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             NetworkUsersInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of NetworkUsersInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of NetworkUsersInner
  * @throws IOException if the JSON string is invalid with respect to NetworkUsersInner
  */
  public static NetworkUsersInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NetworkUsersInner.class);
  }

 /**
  * Convert an instance of NetworkUsersInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

