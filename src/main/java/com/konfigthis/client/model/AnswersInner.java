/*
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AnswersInnerLastEditor;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AnswersInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AnswersInner {
  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Object> tags = null;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ACCEPTED = "accepted";
  @SerializedName(SERIALIZED_NAME_ACCEPTED)
  private Boolean accepted;

  public static final String SERIALIZED_NAME_ANSWER_ID = "answer_id";
  @SerializedName(SERIALIZED_NAME_ANSWER_ID)
  private Integer answerId;

  public static final String SERIALIZED_NAME_AWARDED_BOUNTY_AMOUNT = "awarded_bounty_amount";
  @SerializedName(SERIALIZED_NAME_AWARDED_BOUNTY_AMOUNT)
  private Integer awardedBountyAmount;

  public static final String SERIALIZED_NAME_AWARDED_BOUNTY_USERS = "awarded_bounty_users";
  @SerializedName(SERIALIZED_NAME_AWARDED_BOUNTY_USERS)
  private List<Object> awardedBountyUsers = null;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_BODY_MARKDOWN = "body_markdown";
  @SerializedName(SERIALIZED_NAME_BODY_MARKDOWN)
  private String bodyMarkdown;

  public static final String SERIALIZED_NAME_CAN_FLAG = "can_flag";
  @SerializedName(SERIALIZED_NAME_CAN_FLAG)
  private Boolean canFlag;

  public static final String SERIALIZED_NAME_COMMENT_COUNT = "comment_count";
  @SerializedName(SERIALIZED_NAME_COMMENT_COUNT)
  private Integer commentCount;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<Object> comments = null;

  public static final String SERIALIZED_NAME_COMMUNITY_OWNED_DATE = "community_owned_date";
  @SerializedName(SERIALIZED_NAME_COMMUNITY_OWNED_DATE)
  private Integer communityOwnedDate;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private Integer creationDate;

  public static final String SERIALIZED_NAME_DOWN_VOTE_COUNT = "down_vote_count";
  @SerializedName(SERIALIZED_NAME_DOWN_VOTE_COUNT)
  private Integer downVoteCount;

  public static final String SERIALIZED_NAME_DOWNVOTED = "downvoted";
  @SerializedName(SERIALIZED_NAME_DOWNVOTED)
  private Boolean downvoted;

  public static final String SERIALIZED_NAME_IS_ACCEPTED = "is_accepted";
  @SerializedName(SERIALIZED_NAME_IS_ACCEPTED)
  private Boolean isAccepted;

  public static final String SERIALIZED_NAME_LAST_ACTIVITY_DATE = "last_activity_date";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVITY_DATE)
  private Integer lastActivityDate;

  public static final String SERIALIZED_NAME_LAST_EDIT_DATE = "last_edit_date";
  @SerializedName(SERIALIZED_NAME_LAST_EDIT_DATE)
  private Integer lastEditDate;

  public static final String SERIALIZED_NAME_LAST_EDITOR = "last_editor";
  @SerializedName(SERIALIZED_NAME_LAST_EDITOR)
  private AnswersInnerLastEditor lastEditor;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_LOCKED_DATE = "locked_date";
  @SerializedName(SERIALIZED_NAME_LOCKED_DATE)
  private Integer lockedDate;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private AnswersInnerLastEditor owner;

  public static final String SERIALIZED_NAME_QUESTION_ID = "question_id";
  @SerializedName(SERIALIZED_NAME_QUESTION_ID)
  private Integer questionId;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Integer score;

  public static final String SERIALIZED_NAME_SHARE_LINK = "share_link";
  @SerializedName(SERIALIZED_NAME_SHARE_LINK)
  private String shareLink;

  public static final String SERIALIZED_NAME_UP_VOTE_COUNT = "up_vote_count";
  @SerializedName(SERIALIZED_NAME_UP_VOTE_COUNT)
  private Integer upVoteCount;

  public static final String SERIALIZED_NAME_UPVOTED = "upvoted";
  @SerializedName(SERIALIZED_NAME_UPVOTED)
  private Boolean upvoted;

  public AnswersInner() {
  }

  public AnswersInner tags(List<Object> tags) {
    
    
    
    
    this.tags = tags;
    return this;
  }

  public AnswersInner addTagsItem(Object tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getTags() {
    return tags;
  }


  public void setTags(List<Object> tags) {
    
    
    
    this.tags = tags;
  }


  public AnswersInner title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public AnswersInner accepted(Boolean accepted) {
    
    
    
    
    this.accepted = accepted;
    return this;
  }

   /**
   * Get accepted
   * @return accepted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAccepted() {
    return accepted;
  }


  public void setAccepted(Boolean accepted) {
    
    
    
    this.accepted = accepted;
  }


  public AnswersInner answerId(Integer answerId) {
    
    
    
    
    this.answerId = answerId;
    return this;
  }

   /**
   * Get answerId
   * @return answerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAnswerId() {
    return answerId;
  }


  public void setAnswerId(Integer answerId) {
    
    
    
    this.answerId = answerId;
  }


  public AnswersInner awardedBountyAmount(Integer awardedBountyAmount) {
    
    
    
    
    this.awardedBountyAmount = awardedBountyAmount;
    return this;
  }

   /**
   * Get awardedBountyAmount
   * @return awardedBountyAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAwardedBountyAmount() {
    return awardedBountyAmount;
  }


  public void setAwardedBountyAmount(Integer awardedBountyAmount) {
    
    
    
    this.awardedBountyAmount = awardedBountyAmount;
  }


  public AnswersInner awardedBountyUsers(List<Object> awardedBountyUsers) {
    
    
    
    
    this.awardedBountyUsers = awardedBountyUsers;
    return this;
  }

  public AnswersInner addAwardedBountyUsersItem(Object awardedBountyUsersItem) {
    if (this.awardedBountyUsers == null) {
      this.awardedBountyUsers = new ArrayList<>();
    }
    this.awardedBountyUsers.add(awardedBountyUsersItem);
    return this;
  }

   /**
   * Get awardedBountyUsers
   * @return awardedBountyUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAwardedBountyUsers() {
    return awardedBountyUsers;
  }


  public void setAwardedBountyUsers(List<Object> awardedBountyUsers) {
    
    
    
    this.awardedBountyUsers = awardedBountyUsers;
  }


  public AnswersInner body(String body) {
    
    
    
    
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    
    
    
    this.body = body;
  }


  public AnswersInner bodyMarkdown(String bodyMarkdown) {
    
    
    
    
    this.bodyMarkdown = bodyMarkdown;
    return this;
  }

   /**
   * Get bodyMarkdown
   * @return bodyMarkdown
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBodyMarkdown() {
    return bodyMarkdown;
  }


  public void setBodyMarkdown(String bodyMarkdown) {
    
    
    
    this.bodyMarkdown = bodyMarkdown;
  }


  public AnswersInner canFlag(Boolean canFlag) {
    
    
    
    
    this.canFlag = canFlag;
    return this;
  }

   /**
   * Get canFlag
   * @return canFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanFlag() {
    return canFlag;
  }


  public void setCanFlag(Boolean canFlag) {
    
    
    
    this.canFlag = canFlag;
  }


  public AnswersInner commentCount(Integer commentCount) {
    
    
    
    
    this.commentCount = commentCount;
    return this;
  }

   /**
   * Get commentCount
   * @return commentCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCommentCount() {
    return commentCount;
  }


  public void setCommentCount(Integer commentCount) {
    
    
    
    this.commentCount = commentCount;
  }


  public AnswersInner comments(List<Object> comments) {
    
    
    
    
    this.comments = comments;
    return this;
  }

  public AnswersInner addCommentsItem(Object commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getComments() {
    return comments;
  }


  public void setComments(List<Object> comments) {
    
    
    
    this.comments = comments;
  }


  public AnswersInner communityOwnedDate(Integer communityOwnedDate) {
    
    
    
    
    this.communityOwnedDate = communityOwnedDate;
    return this;
  }

   /**
   * Get communityOwnedDate
   * @return communityOwnedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCommunityOwnedDate() {
    return communityOwnedDate;
  }


  public void setCommunityOwnedDate(Integer communityOwnedDate) {
    
    
    
    this.communityOwnedDate = communityOwnedDate;
  }


  public AnswersInner creationDate(Integer creationDate) {
    
    
    
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(Integer creationDate) {
    
    
    
    this.creationDate = creationDate;
  }


  public AnswersInner downVoteCount(Integer downVoteCount) {
    
    
    
    
    this.downVoteCount = downVoteCount;
    return this;
  }

   /**
   * Get downVoteCount
   * @return downVoteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDownVoteCount() {
    return downVoteCount;
  }


  public void setDownVoteCount(Integer downVoteCount) {
    
    
    
    this.downVoteCount = downVoteCount;
  }


  public AnswersInner downvoted(Boolean downvoted) {
    
    
    
    
    this.downvoted = downvoted;
    return this;
  }

   /**
   * Get downvoted
   * @return downvoted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDownvoted() {
    return downvoted;
  }


  public void setDownvoted(Boolean downvoted) {
    
    
    
    this.downvoted = downvoted;
  }


  public AnswersInner isAccepted(Boolean isAccepted) {
    
    
    
    
    this.isAccepted = isAccepted;
    return this;
  }

   /**
   * Get isAccepted
   * @return isAccepted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAccepted() {
    return isAccepted;
  }


  public void setIsAccepted(Boolean isAccepted) {
    
    
    
    this.isAccepted = isAccepted;
  }


  public AnswersInner lastActivityDate(Integer lastActivityDate) {
    
    
    
    
    this.lastActivityDate = lastActivityDate;
    return this;
  }

   /**
   * Get lastActivityDate
   * @return lastActivityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastActivityDate() {
    return lastActivityDate;
  }


  public void setLastActivityDate(Integer lastActivityDate) {
    
    
    
    this.lastActivityDate = lastActivityDate;
  }


  public AnswersInner lastEditDate(Integer lastEditDate) {
    
    
    
    
    this.lastEditDate = lastEditDate;
    return this;
  }

   /**
   * Get lastEditDate
   * @return lastEditDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastEditDate() {
    return lastEditDate;
  }


  public void setLastEditDate(Integer lastEditDate) {
    
    
    
    this.lastEditDate = lastEditDate;
  }


  public AnswersInner lastEditor(AnswersInnerLastEditor lastEditor) {
    
    
    
    
    this.lastEditor = lastEditor;
    return this;
  }

   /**
   * Get lastEditor
   * @return lastEditor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AnswersInnerLastEditor getLastEditor() {
    return lastEditor;
  }


  public void setLastEditor(AnswersInnerLastEditor lastEditor) {
    
    
    
    this.lastEditor = lastEditor;
  }


  public AnswersInner link(String link) {
    
    
    
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLink() {
    return link;
  }


  public void setLink(String link) {
    
    
    
    this.link = link;
  }


  public AnswersInner lockedDate(Integer lockedDate) {
    
    
    
    
    this.lockedDate = lockedDate;
    return this;
  }

   /**
   * Get lockedDate
   * @return lockedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLockedDate() {
    return lockedDate;
  }


  public void setLockedDate(Integer lockedDate) {
    
    
    
    this.lockedDate = lockedDate;
  }


  public AnswersInner owner(AnswersInnerLastEditor owner) {
    
    
    
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AnswersInnerLastEditor getOwner() {
    return owner;
  }


  public void setOwner(AnswersInnerLastEditor owner) {
    
    
    
    this.owner = owner;
  }


  public AnswersInner questionId(Integer questionId) {
    
    
    
    
    this.questionId = questionId;
    return this;
  }

   /**
   * Get questionId
   * @return questionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuestionId() {
    return questionId;
  }


  public void setQuestionId(Integer questionId) {
    
    
    
    this.questionId = questionId;
  }


  public AnswersInner score(Integer score) {
    
    
    
    
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScore() {
    return score;
  }


  public void setScore(Integer score) {
    
    
    
    this.score = score;
  }


  public AnswersInner shareLink(String shareLink) {
    
    
    
    
    this.shareLink = shareLink;
    return this;
  }

   /**
   * Get shareLink
   * @return shareLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShareLink() {
    return shareLink;
  }


  public void setShareLink(String shareLink) {
    
    
    
    this.shareLink = shareLink;
  }


  public AnswersInner upVoteCount(Integer upVoteCount) {
    
    
    
    
    this.upVoteCount = upVoteCount;
    return this;
  }

   /**
   * Get upVoteCount
   * @return upVoteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUpVoteCount() {
    return upVoteCount;
  }


  public void setUpVoteCount(Integer upVoteCount) {
    
    
    
    this.upVoteCount = upVoteCount;
  }


  public AnswersInner upvoted(Boolean upvoted) {
    
    
    
    
    this.upvoted = upvoted;
    return this;
  }

   /**
   * Get upvoted
   * @return upvoted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUpvoted() {
    return upvoted;
  }


  public void setUpvoted(Boolean upvoted) {
    
    
    
    this.upvoted = upvoted;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AnswersInner instance itself
   */
  public AnswersInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnswersInner answersInner = (AnswersInner) o;
    return Objects.equals(this.tags, answersInner.tags) &&
        Objects.equals(this.title, answersInner.title) &&
        Objects.equals(this.accepted, answersInner.accepted) &&
        Objects.equals(this.answerId, answersInner.answerId) &&
        Objects.equals(this.awardedBountyAmount, answersInner.awardedBountyAmount) &&
        Objects.equals(this.awardedBountyUsers, answersInner.awardedBountyUsers) &&
        Objects.equals(this.body, answersInner.body) &&
        Objects.equals(this.bodyMarkdown, answersInner.bodyMarkdown) &&
        Objects.equals(this.canFlag, answersInner.canFlag) &&
        Objects.equals(this.commentCount, answersInner.commentCount) &&
        Objects.equals(this.comments, answersInner.comments) &&
        Objects.equals(this.communityOwnedDate, answersInner.communityOwnedDate) &&
        Objects.equals(this.creationDate, answersInner.creationDate) &&
        Objects.equals(this.downVoteCount, answersInner.downVoteCount) &&
        Objects.equals(this.downvoted, answersInner.downvoted) &&
        Objects.equals(this.isAccepted, answersInner.isAccepted) &&
        Objects.equals(this.lastActivityDate, answersInner.lastActivityDate) &&
        Objects.equals(this.lastEditDate, answersInner.lastEditDate) &&
        Objects.equals(this.lastEditor, answersInner.lastEditor) &&
        Objects.equals(this.link, answersInner.link) &&
        Objects.equals(this.lockedDate, answersInner.lockedDate) &&
        Objects.equals(this.owner, answersInner.owner) &&
        Objects.equals(this.questionId, answersInner.questionId) &&
        Objects.equals(this.score, answersInner.score) &&
        Objects.equals(this.shareLink, answersInner.shareLink) &&
        Objects.equals(this.upVoteCount, answersInner.upVoteCount) &&
        Objects.equals(this.upvoted, answersInner.upvoted)&&
        Objects.equals(this.additionalProperties, answersInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, title, accepted, answerId, awardedBountyAmount, awardedBountyUsers, body, bodyMarkdown, canFlag, commentCount, comments, communityOwnedDate, creationDate, downVoteCount, downvoted, isAccepted, lastActivityDate, lastEditDate, lastEditor, link, lockedDate, owner, questionId, score, shareLink, upVoteCount, upvoted, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnswersInner {\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    accepted: ").append(toIndentedString(accepted)).append("\n");
    sb.append("    answerId: ").append(toIndentedString(answerId)).append("\n");
    sb.append("    awardedBountyAmount: ").append(toIndentedString(awardedBountyAmount)).append("\n");
    sb.append("    awardedBountyUsers: ").append(toIndentedString(awardedBountyUsers)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    bodyMarkdown: ").append(toIndentedString(bodyMarkdown)).append("\n");
    sb.append("    canFlag: ").append(toIndentedString(canFlag)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    communityOwnedDate: ").append(toIndentedString(communityOwnedDate)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    downVoteCount: ").append(toIndentedString(downVoteCount)).append("\n");
    sb.append("    downvoted: ").append(toIndentedString(downvoted)).append("\n");
    sb.append("    isAccepted: ").append(toIndentedString(isAccepted)).append("\n");
    sb.append("    lastActivityDate: ").append(toIndentedString(lastActivityDate)).append("\n");
    sb.append("    lastEditDate: ").append(toIndentedString(lastEditDate)).append("\n");
    sb.append("    lastEditor: ").append(toIndentedString(lastEditor)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    lockedDate: ").append(toIndentedString(lockedDate)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    questionId: ").append(toIndentedString(questionId)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    shareLink: ").append(toIndentedString(shareLink)).append("\n");
    sb.append("    upVoteCount: ").append(toIndentedString(upVoteCount)).append("\n");
    sb.append("    upvoted: ").append(toIndentedString(upvoted)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tags");
    openapiFields.add("title");
    openapiFields.add("accepted");
    openapiFields.add("answer_id");
    openapiFields.add("awarded_bounty_amount");
    openapiFields.add("awarded_bounty_users");
    openapiFields.add("body");
    openapiFields.add("body_markdown");
    openapiFields.add("can_flag");
    openapiFields.add("comment_count");
    openapiFields.add("comments");
    openapiFields.add("community_owned_date");
    openapiFields.add("creation_date");
    openapiFields.add("down_vote_count");
    openapiFields.add("downvoted");
    openapiFields.add("is_accepted");
    openapiFields.add("last_activity_date");
    openapiFields.add("last_edit_date");
    openapiFields.add("last_editor");
    openapiFields.add("link");
    openapiFields.add("locked_date");
    openapiFields.add("owner");
    openapiFields.add("question_id");
    openapiFields.add("score");
    openapiFields.add("share_link");
    openapiFields.add("up_vote_count");
    openapiFields.add("upvoted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AnswersInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AnswersInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AnswersInner is not found in the empty JSON string", AnswersInner.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("awarded_bounty_users") != null && !jsonObj.get("awarded_bounty_users").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `awarded_bounty_users` to be an array in the JSON string but got `%s`", jsonObj.get("awarded_bounty_users").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if ((jsonObj.get("body_markdown") != null && !jsonObj.get("body_markdown").isJsonNull()) && !jsonObj.get("body_markdown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body_markdown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body_markdown").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be an array in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      // validate the optional field `last_editor`
      if (jsonObj.get("last_editor") != null && !jsonObj.get("last_editor").isJsonNull()) {
        AnswersInnerLastEditor.validateJsonObject(jsonObj.getAsJsonObject("last_editor"));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        AnswersInnerLastEditor.validateJsonObject(jsonObj.getAsJsonObject("owner"));
      }
      if ((jsonObj.get("share_link") != null && !jsonObj.get("share_link").isJsonNull()) && !jsonObj.get("share_link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `share_link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("share_link").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AnswersInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AnswersInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AnswersInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AnswersInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AnswersInner>() {
           @Override
           public void write(JsonWriter out, AnswersInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AnswersInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AnswersInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AnswersInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AnswersInner
  * @throws IOException if the JSON string is invalid with respect to AnswersInner
  */
  public static AnswersInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AnswersInner.class);
  }

 /**
  * Convert an instance of AnswersInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

